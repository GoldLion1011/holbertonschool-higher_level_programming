===============================
The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided.py').matrix_divided

Correct usage:

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


Must be list of lists of ints or floats:
    >>> matrix = [
    ...    ['integer', 'float'],
    ...    [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

div must be a number:
     >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 'oopsie')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Each row of matrix must be of the same size:
    >>> matrix = [
    ...    [1, 2, 3]
    ...    [4, 5, 6, 7]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

div cannot be == 0:
    >>> matrix = [
    ...    [1, 2, 3]
    ...    [4, 5, 6]
    ... ]
     >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

div is negative:
    >>> matrix = [
    ...    [1, 2, 3]
    ...    [4, 5, 6]
    ... ]
     >>> matrix_divided(matrix, -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Matrix is empty:
    >>> matrix = [[]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

div is not a number:
    >>> matrix_divided(matrix, 'yikes')
    >>> matrix_divided(matrix, None)
    ...
    Traceback (most recent call last):
    ...
    TypeError: div must be a number



































